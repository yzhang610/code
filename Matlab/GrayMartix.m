%纹理特征――灰度共生矩阵实现
%d = 1, Q = 0, 45, 90, 135度，共计四个矩阵
%**************************************************************************
%读入图像信息，获得图像的长宽
Image = imread('1.jpg');
[M, N, d] = size(Image);
%**************************************************************************
%将图像转为灰度图像
Gray = double(0.3 * Image(:,:,1) + 0.59 * Image(:,:,2) + 0.11 * Image(:,:,3));   %灰度等级0-255
%**************************************************************************
%为减少计算量，对原始图像灰度级256级进行压缩，即将Gray量化为16级图像
for i = 1:M
    for j = 1:N
        for n = 1 : 256/16
            if (n - 1) * 16 <= Gray(i, j) & Gray(i, j) <= (n - 1) * 16 + 15
                Gray(i, j) = n - 1;
            end
        end
    end
end
%**************************************************************************
%计算四个共生矩阵P，取距离为1，角度分别为0,45,90,135度
P = zeros(16, 16, 4);
for m = 1 : 16
    for n = 1 : 16
        for i = 1 : M
            for j = 1 : N
                if j < N && Gray(i, j) == m - 1 && Gray(i, j + 1) == n - 1   %0度
                    P(m, n, 1) = P(m, n, 1) + 1;
                    P(n, m, 1) = P(m, n, 1);
                end
                if i > 1 && j < N && Gray(i, j) == m - 1 && Gray(i - 1, j + 1)== n - 1   %45度
                    P(m, n, 2) = P(m, n, 2) + 1;
                    P(n, m, 2) = P(m, n, 2);
                end
                if i < M && Gray(i, j) == m - 1 && Gray(i + 1, j) == n - 1   %90度
                    P(m, n, 3) = P(m, n, 3) + 1;
                    P(n, m, 3) = P(m, n, 3);
                end
                if i < M && j < N && Gray(i, j) == m - 1 && Gray(i + 1, j + 1) == n - 1   %135度
                    P(m, n, 4) = P(m, n, 4) + 1;
                    P(n, m, 4) = P(m, n, 4);
                end
            end
        end
        if m == n
            P(m, n, :) = P(m, n, :) * 2;
        end
    end
end
%**************************************************************************
%对共生矩阵归一化
for n = 1 : 4
    P(:, :, n) = P(:, :, n) / sum (sum(P(:, :, n)));
end
%**************************************************************************
%对共生矩阵计算能量、熵、惯性矩、相关4个纹理参数
H = zeros(1, 4);
I = H;
Ux = H;
Uy = H;
deltaX = H;
deltaY = H;
C = H;
for n = 1 : 4
     E(n) = sum(sum(P(:, :, n).^2));   %能量
     for i = 1 : 16
         for j = 1 : 16
             if P(i, j, n) ~= 0
                 H(n) = -P(i, j, n) * log(P(i, j, n)) + H(n);   %熵
             end
             I(n) = (i - j)^2 * P(i, j, n) + I(n);   %惯性矩
             Ux(n) = i * P(i, j, n) + Ux(n);    %相关性中Ux
             Uy(n) = j * P(i, j, n) + Uy(n);    %相关性中Uy
         end
     end
end
for n = 1 : 4
     for i = 1 : 16
         for j = 1: 16
             deltaX(n) = (i - Ux(n))^2 * P(i, j, n) + deltaX(n);   %相关性中dx
             deltaY(n) = (j - Uy(n))^2 * P(i, j, n) + deltaY(n);   %相关性中dy
             C(n) = i * j * P(i, j, n) + C(n);
         end
     end
     C(n) = (C(n) - Ux(n) * Uy(n)) / deltaX(n) / deltaY(n);    %相关性
end
%**************************************************************************
%求能量、熵、惯性矩、相关的均值和标准差作为最终8维纹理特征
a1 = mean(E);
b1 = sqrt(cov(E));
a2 = mean(H);
b2 = sqrt(cov(H));
a3 = mean(I);
b3 = sqrt(cov(C));
sprintf('0,45,90,135方向上的能量依次为：%f, %f, %f, %f', E(1), E(2), E(3), E(4))
sprintf('0,45,90,135方向上的熵依次为：%f, %f, %f, %f', H(1), H(2), H(3), H(4))
sprintf('0,45,90,135方向上的惯性矩依次为：%f, %f, %f, %f', I(1), I(2), I(3), I(4))
sprintf('0,45,90,135方向上的相关性依次为：%f, %f, %f, %f', C(1), C(2), C(3), C(4))
%**************************************************************************
             

    
